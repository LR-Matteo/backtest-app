{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d347ff78-415a-494c-83bd-415fa5e58188",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-10-24 11:13:18.424 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.427 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.428 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.429 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.434 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.436 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.508 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.511 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.513 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.516 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.516 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.517 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.518 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.520 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.523 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.524 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.525 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.527 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.529 Session state does not function when running a script without `streamlit run`\n",
      "2024-10-24 11:13:18.531 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.532 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.539 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.540 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.541 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.542 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.544 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.545 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.564 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.565 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.567 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.569 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:18.639 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.313 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.316 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.318 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.319 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.322 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.325 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.329 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-24 11:13:19.331 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Charger le dataframe\n",
    "df_combined = pd.read_excel('C:\\\\Users\\\\matte\\\\Documents\\\\Historical Data.xlsx')\n",
    "\n",
    "# Créer une nouvelle colonne pour combiner les équipes à domicile et à l'extérieur\n",
    "df_combined['Match'] = df_combined['Home Team_x'] + \" vs \" + df_combined['Away Team_x']\n",
    "\n",
    "# Titre de l'application\n",
    "st.title(\"Analyse des Paris Sportifs\")\n",
    "\n",
    "# Sidebar pour les filtres\n",
    "st.sidebar.header(\"Filtres\")\n",
    "\n",
    "# Filtrer les matchs\n",
    "matches = df_combined['Match'].unique()\n",
    "selected_matches = st.sidebar.multiselect(\"Sélectionner les matchs :\", matches, default=matches)\n",
    "\n",
    "# Filtrer les résultats (gagnant ou perdant)\n",
    "options_resultat = {\n",
    "    \"Gagné (1)\": 1,\n",
    "    \"Perdu (0)\": 0,\n",
    "    \"Match reporté (NaN)\": np.nan\n",
    "}\n",
    "selected_resultats = st.sidebar.multiselect(\"Sélectionner le résultat :\", list(options_resultat.keys()), default=list(options_resultat.keys()))\n",
    "selected_resultats_values = [options_resultat[opt] for opt in selected_resultats]\n",
    "\n",
    "# Liste des colonnes de probabilités et Kelly Criterion pour chaque niveau de recul\n",
    "proba_columns = [col for col in df_combined.columns if 'Proba 2.5+ lvl' in col]\n",
    "kelly_columns = [col for col in df_combined.columns if 'Kelly_lvl' in col]\n",
    "\n",
    "# Sélectionner le niveau de recul à analyser\n",
    "selected_lvl = st.sidebar.selectbox(\"Sélectionner le niveau de recul :\", list(range(3, 10)))\n",
    "\n",
    "# Nom des colonnes sélectionnées pour la probabilité et le critère de Kelly\n",
    "proba_col = f'Proba 2.5+ lvl{selected_lvl}'\n",
    "kelly_col = f'Kelly Criterion lvl{selected_lvl}'\n",
    "\n",
    "# Appliquer les filtres au dataframe\n",
    "df_filtered = df_combined[\n",
    "    (df_combined['Match'].isin(selected_matches)) &\n",
    "    (df_combined['Result'].isin(selected_resultats))\n",
    "]\n",
    "\n",
    "# Afficher le dataframe filtré\n",
    "st.subheader(\"Données filtrées\")\n",
    "st.write(f\"Nombre de paris : {len(df_filtered)}\")\n",
    "st.dataframe(df_filtered)\n",
    "\n",
    "# Graphique de l'évolution de la bankroll\n",
    "st.subheader(\"Évolution de la bankroll\")\n",
    "\n",
    "# Assurer que la colonne Profit/Pertes existe dans ton dataframe\n",
    "if 'P/L' in df_filtered.columns:\n",
    "    # Calculer l'évolution de la bankroll avec intérêts composés\n",
    "    capital_initial = 1000  # Exemple : Capital initial de 1000\n",
    "    df_filtered['Bankroll'] = capital_initial * (1 + df_filtered['P/L']).cumprod()\n",
    "\n",
    "    # Créer un graphique de l'évolution de la bankroll\n",
    "    plt.figure(figsize=(10, 6))\n",
    "    plt.plot(df_filtered['Jour'], df_filtered['Bankroll'], marker='o')\n",
    "    plt.xlabel('Jour')\n",
    "    plt.ylabel('Bankroll')\n",
    "    plt.title('Évolution de la bankroll au fil des jours')\n",
    "    st.pyplot(plt.gcf())\n",
    "else:\n",
    "    st.write(\"La colonne 'Profit/Pertes' est manquante dans le dataframe.\")\n",
    "\n",
    "# Ajouter un résumé des statistiques clés\n",
    "st.subheader(\"Résumé des Statistiques\")\n",
    "\n",
    "# Calculer la moyenne des probabilités et du Kelly Criterion pour le niveau de recul sélectionné\n",
    "if proba_col in df_filtered.columns and kelly_col in df_filtered.columns:\n",
    "    mean_proba = df_filtered[proba_col].mean()\n",
    "    mean_kelly = df_filtered[kelly_col].mean()\n",
    "    st.write(f\"Probabilité moyenne ({proba_col}) : {mean_proba:.2f}\")\n",
    "    st.write(f\"Kelly Criterion moyen ({kelly_col}) : {mean_kelly:.2f}\")\n",
    "\n",
    "# Résumé des profits et pertes\n",
    "total_profit = df_filtered['P/L'].sum()\n",
    "st.write(f\"Profit/Pertes total : {total_profit:.2f}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
